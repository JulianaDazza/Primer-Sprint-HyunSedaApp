package co.com.hyunseda.market.presentation;

import co.com.hyunseda.market.domain.Product;
import co.com.hyunseda.market.service.CategoryService;
import co.com.hyunseda.market.service.ProductService;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

/**
 *
 * @author Libardo Pantoja, Julio A. Hurtado
 */
public class GUIEditProduct extends javax.swing.JFrame {

    private ProductService productService;
    private CategoryService categoryService;
    private boolean addOption;

    /**
     * Creates new form GUIProducts
     */
    public GUIEditProduct(ProductService productService) {
        initComponents();
        this.productService = productService;
        stateInitial();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlSouth = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblCaegory = new javax.swing.JLabel();
        pnlButtonsCategory = new java.awt.Panel();
        chbChales = new java.awt.Checkbox();
        chbRuanas = new java.awt.Checkbox();
        chbPonchos = new java.awt.Checkbox();
        chbBufandas = new java.awt.Checkbox();
        chbAretes = new java.awt.Checkbox();
        chbPanoletas = new java.awt.Checkbox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        pnlSouth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSave.setText("Grabar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlSouth.add(btnSave);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCancelar);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCerrar);

        getContentPane().add(pnlSouth, java.awt.BorderLayout.SOUTH);

        pnlCenter.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlCenter.setLayout(new java.awt.GridLayout(5, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("*id:");
        pnlCenter.add(jLabel1);

        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });
        pnlCenter.add(txtId);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("*Nombre:");
        pnlCenter.add(jLabel2);
        pnlCenter.add(txtName);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("*Descripción:");
        pnlCenter.add(jLabel3);

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        pnlCenter.add(jScrollPane1);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("*Precio:");
        pnlCenter.add(jLabel5);
        pnlCenter.add(txtPrice);

        lblCaegory.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCaegory.setText("*Category:");
        pnlCenter.add(lblCaegory);

        chbChales.setLabel("Chales");
        pnlButtonsCategory.add(chbChales);

        chbRuanas.setLabel("Ruanas");
        pnlButtonsCategory.add(chbRuanas);

        chbPonchos.setLabel("Ponchos");
        pnlButtonsCategory.add(chbPonchos);

        chbBufandas.setLabel("Bufandas");
        pnlButtonsCategory.add(chbBufandas);

        chbAretes.setLabel("Aretes");
        pnlButtonsCategory.add(chbAretes);

        chbPanoletas.setLabel("Pañoletas");
        pnlButtonsCategory.add(chbPanoletas);

        pnlCenter.add(pnlButtonsCategory);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Menú de Productos");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel4, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        stateInitial();
        //cleanControls();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
       GUIMainMenu nMenu = new GUIMainMenu(productService,categoryService);
       nMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtName.getText().trim().equals("") || txtDescription.getText().trim().equals("") || txtPrice.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe ingresar todos los datos del producto", "Atención");
            txtName.requestFocus();
            txtDescription.requestFocus();
            txtPrice.requestFocus();
            return;
        }
        if (addOption) {
            //Agregar
            addProduct();

        } else {
            //Editar
            editProduct();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
        if (txtId.getText().trim().equals("")) {
            return;
        }
        Long productId = Long.parseLong(txtId.getText());
        Product prod = productService.findProductById(productId);
        if (prod == null) {
            Messages.showMessageDialog("El identificador del producto no existe", "Error");
            txtId.setText("");
            txtId.requestFocus();
        } else {
            txtName.setText(prod.getName());
            txtDescription.setText(prod.getDescription());
        }
    }//GEN-LAST:event_txtIdFocusLost
    private void stateEdit() {
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        txtId.setEnabled(false);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtPrice.setEnabled(true);
    }

    private void stateInitial() {
        btnCancelar.setVisible(false);
        btnCerrar.setVisible(true);
        btnSave.setVisible(false);
        txtId.setEnabled(true);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtPrice.setEnabled(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnSave;
    private java.awt.Checkbox chbAretes;
    private java.awt.Checkbox chbBufandas;
    private java.awt.Checkbox chbChales;
    private java.awt.Checkbox chbPanoletas;
    private java.awt.Checkbox chbPonchos;
    private java.awt.Checkbox chbRuanas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCaegory;
    private java.awt.Panel pnlButtonsCategory;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlSouth;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void stateNew() {
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        btnSave.setVisible(true);
        txtId.setEnabled(false);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtPrice.setEnabled(true);

    }

    /*private void cleanControls() {
        txtId.setText("");
        txtName.setText("");
        txtDescription.setText("");
        txtPrice.setText("");
    }*/

    private void addProduct() {
        String categoryName;
        
        List<String> categories = new ArrayList<>();
        
        if(chbChales.getState()){
            categoryName = chbChales.getLabel();
            categories.add(categoryName);
        }else if(chbRuanas.getState()){
            categoryName = chbRuanas.getLabel();
        }else if(chbPonchos.getState()){
            categoryName = chbPonchos.getLabel();
        }else if(chbBufandas.getState()){
            categoryName = chbBufandas.getLabel();
        }else if(chbAretes.getState()){
            categoryName = chbAretes.getLabel();
        }else if(chbPanoletas.getState()){
            categoryName = chbPanoletas.getLabel();
        }else{
            Messages.showMessageDialog("Debe seleccionar al menos 1 categoria", "Atención!");
        }
        String id = txtId.getText().trim();
        int idProduct = Integer.parseInt(id);
        String name = txtName.getText().trim();
        String description = txtDescription.getText().trim();
        double price = Double.parseDouble(txtPrice.getText());
        /*Product np = new Product();
        np.setName(name);
        np.setDescription(description);
        np.setPrice(price);  */               // Esta bien como esta guardado el productor?
        if (productService.saveProduct(idProduct,name,description,price,categories)/*productService.saveProduct(name, description)*/) {
            Messages.showMessageDialog("Se grabó con éxito", "Atención");
            //cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al grabar, lo siento mucho", "Atención");
        }
    }

    private void editProduct() {
        String id = txtId.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar el producto a editar", "Atención");
            txtId.requestFocus();
            return;
        }
        Long productId = Long.parseLong(id);
        Product prod = new Product();
        prod.setName(txtName.getText().trim());
        double precio = Double.parseDouble(txtPrice.getText().trim());
        prod.setPrice(precio);
        prod.setDescription(txtDescription.getText().trim());

        if (productService.editProduct(productId, prod)) {
            Messages.showMessageDialog("Se editó con éxito", "Atención");
            //cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al editar, lo siento mucho", "Atención");
        }
    }
}
